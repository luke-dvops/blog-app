function cov_28iryjq0wq(){var path="C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="8056ccf40b461389c483704f5ee89d33df7ae0be";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:11,column:0},end:{line:110,column:3}},"8":{start:{line:15,column:1},end:{line:28,column:3}},"9":{start:{line:16,column:2},end:{line:27,column:3}},"10":{start:{line:17,column:16},end:{line:21,column:6}},"11":{start:{line:23,column:4},end:{line:23,column:36}},"12":{start:{line:24,column:4},end:{line:24,column:67}},"13":{start:{line:26,column:4},end:{line:26,column:16}},"14":{start:{line:30,column:0},end:{line:43,column:3}},"15":{start:{line:31,column:2},end:{line:42,column:3}},"16":{start:{line:32,column:16},end:{line:36,column:6}},"17":{start:{line:38,column:4},end:{line:38,column:36}},"18":{start:{line:39,column:4},end:{line:39,column:117}},"19":{start:{line:41,column:4},end:{line:41,column:16}},"20":{start:{line:47,column:2},end:{line:59,column:5}},"21":{start:{line:48,column:16},end:{line:51,column:6}},"22":{start:{line:53,column:4},end:{line:53,column:36}},"23":{start:{line:54,column:4},end:{line:54,column:67}},"24":{start:{line:55,column:4},end:{line:55,column:40}},"25":{start:{line:58,column:4},end:{line:58,column:69}},"26":{start:{line:62,column:2},end:{line:70,column:5}},"27":{start:{line:63,column:16},end:{line:66,column:6}},"28":{start:{line:68,column:4},end:{line:68,column:36}},"29":{start:{line:69,column:4},end:{line:69,column:66}},"30":{start:{line:73,column:2},end:{line:81,column:5}},"31":{start:{line:74,column:16},end:{line:77,column:6}},"32":{start:{line:79,column:4},end:{line:79,column:36}},"33":{start:{line:80,column:4},end:{line:80,column:78}},"34":{start:{line:84,column:2},end:{line:98,column:5}},"35":{start:{line:87,column:16},end:{line:90,column:38}},"36":{start:{line:93,column:4},end:{line:93,column:52}},"37":{start:{line:96,column:4},end:{line:96,column:36}},"38":{start:{line:100,column:2},end:{line:108,column:3}},"39":{start:{line:101,column:4},end:{line:104,column:13}},"40":{start:{line:102,column:6},end:{line:102,column:49}},"41":{start:{line:103,column:6},end:{line:103,column:21}},"42":{start:{line:106,column:4},end:{line:106,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:42},end:{line:11,column:43}},loc:{start:{line:11,column:48},end:{line:110,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:47},end:{line:15,column:48}},loc:{start:{line:15,column:59},end:{line:28,column:1}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:39},end:{line:30,column:40}},loc:{start:{line:30,column:51},end:{line:43,column:1}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:47,column:63},end:{line:47,column:64}},loc:{start:{line:47,column:75},end:{line:59,column:3}},line:47},"4":{name:"(anonymous_4)",decl:{start:{line:62,column:80},end:{line:62,column:81}},loc:{start:{line:62,column:92},end:{line:70,column:3}},line:62},"5":{name:"(anonymous_5)",decl:{start:{line:73,column:80},end:{line:73,column:81}},loc:{start:{line:73,column:92},end:{line:81,column:3}},line:73},"6":{name:"(anonymous_6)",decl:{start:{line:84,column:52},end:{line:84,column:53}},loc:{start:{line:84,column:64},end:{line:98,column:3}},line:84},"7":{name:"(anonymous_7)",decl:{start:{line:100,column:8},end:{line:100,column:9}},loc:{start:{line:100,column:18},end:{line:108,column:1}},line:100},"8":{name:"(anonymous_8)",decl:{start:{line:101,column:15},end:{line:101,column:16}},loc:{start:{line:101,column:21},end:{line:104,column:5}},line:101}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8056ccf40b461389c483704f5ee89d33df7ae0be"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28iryjq0wq=function(){return actualCoverage;};}return actualCoverage;}cov_28iryjq0wq();const chai=(cov_28iryjq0wq().s[0]++,require("chai"));const chaiHttp=(cov_28iryjq0wq().s[1]++,require("chai-http"));const app=(cov_28iryjq0wq().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_28iryjq0wq().s[3]++,chai);cov_28iryjq0wq().s[4]++;chai.use(chaiHttp);const registerPath=(cov_28iryjq0wq().s[5]++,"/api/auth/register");const loginPath=(cov_28iryjq0wq().s[6]++,"/api/auth/login");cov_28iryjq0wq().s[7]++;describe("Testing Authentication Routes",()=>{cov_28iryjq0wq().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_28iryjq0wq().s[8]++;it("should register a new user successfully",async()=>{cov_28iryjq0wq().f[1]++;cov_28iryjq0wq().s[9]++;try{const res=(cov_28iryjq0wq().s[10]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[11]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[12]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_28iryjq0wq().s[13]++;throw error;}});cov_28iryjq0wq().s[14]++;it("should handle duplicate username",async()=>{cov_28iryjq0wq().f[2]++;cov_28iryjq0wq().s[15]++;try{const res=(cov_28iryjq0wq().s[16]++,await chai.request(app).post(registerPath).send({username:"luke",email:"anotheruser@gmail.com",password:"654321"}));cov_28iryjq0wq().s[17]++;expect(res).to.have.status(400);cov_28iryjq0wq().s[18]++;expect(res.body).to.have.property("error").to.equal("Username is already in use. Please choose a new username.");}catch(error){cov_28iryjq0wq().s[19]++;throw error;}});// Test case for user login
cov_28iryjq0wq().s[20]++;it("should login a user and return an authentication token",async()=>{cov_28iryjq0wq().f[3]++;const res=(cov_28iryjq0wq().s[21]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[22]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[23]++;expect(res.body).to.have.property("username").to.equal("luke");cov_28iryjq0wq().s[24]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_28iryjq0wq().s[25]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_28iryjq0wq().s[26]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_28iryjq0wq().f[4]++;const res=(cov_28iryjq0wq().s[27]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_28iryjq0wq().s[28]++;expect(res).to.have.status(404);cov_28iryjq0wq().s[29]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_28iryjq0wq().s[30]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_28iryjq0wq().f[5]++;const res=(cov_28iryjq0wq().s[31]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_28iryjq0wq().s[32]++;expect(res).to.have.status(401);cov_28iryjq0wq().s[33]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_28iryjq0wq().s[34]++;it("should refetch user information after login",async()=>{cov_28iryjq0wq().f[6]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_28iryjq0wq().s[35]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_28iryjq0wq().s[36]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_28iryjq0wq().s[37]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});cov_28iryjq0wq().s[38]++;after(done=>{cov_28iryjq0wq().f[7]++;cov_28iryjq0wq().s[39]++;setTimeout(()=>{cov_28iryjq0wq().f[8]++;cov_28iryjq0wq().s[40]++;console.log("Terminating the test suite.");cov_28iryjq0wq().s[41]++;process.exit();},1000);cov_28iryjq0wq().s[42]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,