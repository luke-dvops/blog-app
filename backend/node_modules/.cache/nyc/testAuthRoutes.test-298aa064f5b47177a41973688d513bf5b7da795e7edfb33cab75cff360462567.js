function cov_28iryjq0wq(){var path="C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="ce5324f9461869a32bfe20f145d703ded5fa88d6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:10,column:29},end:{line:10,column:65}},"8":{start:{line:11,column:26},end:{line:11,column:55}},"9":{start:{line:12,column:0},end:{line:127,column:3}},"10":{start:{line:16,column:1},end:{line:29,column:3}},"11":{start:{line:17,column:2},end:{line:28,column:3}},"12":{start:{line:18,column:16},end:{line:22,column:6}},"13":{start:{line:24,column:4},end:{line:24,column:36}},"14":{start:{line:25,column:4},end:{line:25,column:67}},"15":{start:{line:27,column:4},end:{line:27,column:16}},"16":{start:{line:31,column:0},end:{line:46,column:3}},"17":{start:{line:32,column:26},end:{line:32,column:40}},"18":{start:{line:34,column:2},end:{line:45,column:7}},"19":{start:{line:37,column:6},end:{line:39,column:7}},"20":{start:{line:38,column:8},end:{line:38,column:25}},"21":{start:{line:41,column:6},end:{line:41,column:38}},"22":{start:{line:42,column:6},end:{line:42,column:42}},"23":{start:{line:43,column:6},end:{line:43,column:66}},"24":{start:{line:44,column:6},end:{line:44,column:13}},"25":{start:{line:47,column:0},end:{line:59,column:3}},"26":{start:{line:48,column:27},end:{line:48,column:45}},"27":{start:{line:50,column:14},end:{line:52,column:51}},"28":{start:{line:54,column:2},end:{line:54,column:34}},"29":{start:{line:55,column:2},end:{line:55,column:37}},"30":{start:{line:56,column:2},end:{line:58,column:4}},"31":{start:{line:64,column:2},end:{line:76,column:5}},"32":{start:{line:65,column:16},end:{line:68,column:6}},"33":{start:{line:70,column:4},end:{line:70,column:36}},"34":{start:{line:71,column:4},end:{line:71,column:67}},"35":{start:{line:72,column:4},end:{line:72,column:40}},"36":{start:{line:75,column:4},end:{line:75,column:69}},"37":{start:{line:79,column:2},end:{line:87,column:5}},"38":{start:{line:80,column:16},end:{line:83,column:6}},"39":{start:{line:85,column:4},end:{line:85,column:36}},"40":{start:{line:86,column:4},end:{line:86,column:66}},"41":{start:{line:90,column:2},end:{line:98,column:5}},"42":{start:{line:91,column:16},end:{line:94,column:6}},"43":{start:{line:96,column:4},end:{line:96,column:36}},"44":{start:{line:97,column:4},end:{line:97,column:78}},"45":{start:{line:101,column:2},end:{line:115,column:5}},"46":{start:{line:104,column:16},end:{line:107,column:38}},"47":{start:{line:110,column:4},end:{line:110,column:52}},"48":{start:{line:113,column:4},end:{line:113,column:36}},"49":{start:{line:117,column:2},end:{line:125,column:3}},"50":{start:{line:118,column:4},end:{line:121,column:13}},"51":{start:{line:119,column:6},end:{line:119,column:49}},"52":{start:{line:120,column:6},end:{line:120,column:21}},"53":{start:{line:123,column:4},end:{line:123,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:42},end:{line:12,column:43}},loc:{start:{line:12,column:48},end:{line:127,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:47},end:{line:16,column:48}},loc:{start:{line:16,column:59},end:{line:29,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:75},end:{line:31,column:76}},loc:{start:{line:31,column:85},end:{line:46,column:1}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:9},end:{line:36,column:10}},loc:{start:{line:36,column:23},end:{line:45,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:47,column:80},end:{line:47,column:81}},loc:{start:{line:47,column:92},end:{line:59,column:1}},line:47},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:63},end:{line:64,column:64}},loc:{start:{line:64,column:75},end:{line:76,column:3}},line:64},"6":{name:"(anonymous_6)",decl:{start:{line:79,column:80},end:{line:79,column:81}},loc:{start:{line:79,column:92},end:{line:87,column:3}},line:79},"7":{name:"(anonymous_7)",decl:{start:{line:90,column:80},end:{line:90,column:81}},loc:{start:{line:90,column:92},end:{line:98,column:3}},line:90},"8":{name:"(anonymous_8)",decl:{start:{line:101,column:52},end:{line:101,column:53}},loc:{start:{line:101,column:64},end:{line:115,column:3}},line:101},"9":{name:"(anonymous_9)",decl:{start:{line:117,column:8},end:{line:117,column:9}},loc:{start:{line:117,column:18},end:{line:125,column:1}},line:117},"10":{name:"(anonymous_10)",decl:{start:{line:118,column:15},end:{line:118,column:16}},loc:{start:{line:118,column:21},end:{line:121,column:5}},line:118}},branchMap:{"0":{loc:{start:{line:37,column:6},end:{line:39,column:7}},type:"if",locations:[{start:{line:37,column:6},end:{line:39,column:7}},{start:{line:37,column:6},end:{line:39,column:7}}],line:37}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ce5324f9461869a32bfe20f145d703ded5fa88d6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28iryjq0wq=function(){return actualCoverage;};}return actualCoverage;}cov_28iryjq0wq();const chai=(cov_28iryjq0wq().s[0]++,require("chai"));const chaiHttp=(cov_28iryjq0wq().s[1]++,require("chai-http"));const app=(cov_28iryjq0wq().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_28iryjq0wq().s[3]++,chai);cov_28iryjq0wq().s[4]++;chai.use(chaiHttp);const registerPath=(cov_28iryjq0wq().s[5]++,"/api/auth/register");const loginPath=(cov_28iryjq0wq().s[6]++,"/api/auth/login");const existingUsernamePath=(cov_28iryjq0wq().s[7]++,"api/auth//check-username/:username");const existingEmailPath=(cov_28iryjq0wq().s[8]++,"api/auth/check-email/:email");cov_28iryjq0wq().s[9]++;describe("Testing Authentication Routes",()=>{cov_28iryjq0wq().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_28iryjq0wq().s[10]++;it("should register a new user successfully",async()=>{cov_28iryjq0wq().f[1]++;cov_28iryjq0wq().s[11]++;try{const res=(cov_28iryjq0wq().s[12]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[13]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[14]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_28iryjq0wq().s[15]++;throw error;}});cov_28iryjq0wq().s[16]++;it('should return status 200 and indicate that the username is available',done=>{cov_28iryjq0wq().f[2]++;const usernameToCheck=(cov_28iryjq0wq().s[17]++,'testusername');cov_28iryjq0wq().s[18]++;chai.request(app).get(`/api/check-username/${usernameToCheck}`).end((err,res)=>{cov_28iryjq0wq().f[3]++;cov_28iryjq0wq().s[19]++;if(err){cov_28iryjq0wq().b[0][0]++;cov_28iryjq0wq().s[20]++;return done(err);}else{cov_28iryjq0wq().b[0][1]++;}cov_28iryjq0wq().s[21]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[22]++;expect(res.body.exists).to.be.false;cov_28iryjq0wq().s[23]++;expect(res.body.message).to.equal('Username is available.');cov_28iryjq0wq().s[24]++;done();});});cov_28iryjq0wq().s[25]++;it("should return status 200 and indicate that the username is already in use",async()=>{cov_28iryjq0wq().f[4]++;const existingUsername=(cov_28iryjq0wq().s[26]++,"existingUsername");const res=(cov_28iryjq0wq().s[27]++,await chai.request(app).get(`/api/check-username/${existingUsername}`));cov_28iryjq0wq().s[28]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[29]++;expect(res.body.exists).to.be.true;cov_28iryjq0wq().s[30]++;expect(res.body.message).to.equal("Username is already in use. Please choose a new username.");});// Test case for user login
cov_28iryjq0wq().s[31]++;it("should login a user and return an authentication token",async()=>{cov_28iryjq0wq().f[5]++;const res=(cov_28iryjq0wq().s[32]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[33]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[34]++;expect(res.body).to.have.property("username").to.equal("luke");cov_28iryjq0wq().s[35]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_28iryjq0wq().s[36]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_28iryjq0wq().s[37]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_28iryjq0wq().f[6]++;const res=(cov_28iryjq0wq().s[38]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_28iryjq0wq().s[39]++;expect(res).to.have.status(404);cov_28iryjq0wq().s[40]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_28iryjq0wq().s[41]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_28iryjq0wq().f[7]++;const res=(cov_28iryjq0wq().s[42]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_28iryjq0wq().s[43]++;expect(res).to.have.status(401);cov_28iryjq0wq().s[44]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_28iryjq0wq().s[45]++;it("should refetch user information after login",async()=>{cov_28iryjq0wq().f[8]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_28iryjq0wq().s[46]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_28iryjq0wq().s[47]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_28iryjq0wq().s[48]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});cov_28iryjq0wq().s[49]++;after(done=>{cov_28iryjq0wq().f[9]++;cov_28iryjq0wq().s[50]++;setTimeout(()=>{cov_28iryjq0wq().f[10]++;cov_28iryjq0wq().s[51]++;console.log("Terminating the test suite.");cov_28iryjq0wq().s[52]++;process.exit();},1000);cov_28iryjq0wq().s[53]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,