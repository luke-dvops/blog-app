function cov_28iryjq0wq(){var path="C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="c4be2b8231e99a5e4a8796e9a05662d03c7c633f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:10,column:29},end:{line:10,column:55}},"8":{start:{line:11,column:26},end:{line:11,column:49}},"9":{start:{line:12,column:0},end:{line:209,column:3}},"10":{start:{line:16,column:1},end:{line:29,column:3}},"11":{start:{line:17,column:2},end:{line:28,column:3}},"12":{start:{line:18,column:16},end:{line:22,column:6}},"13":{start:{line:24,column:4},end:{line:24,column:36}},"14":{start:{line:25,column:4},end:{line:25,column:67}},"15":{start:{line:27,column:4},end:{line:27,column:16}},"16":{start:{line:31,column:0},end:{line:44,column:3}},"17":{start:{line:32,column:2},end:{line:43,column:3}},"18":{start:{line:33,column:16},end:{line:37,column:6}},"19":{start:{line:39,column:4},end:{line:39,column:36}},"20":{start:{line:40,column:4},end:{line:40,column:117}},"21":{start:{line:42,column:4},end:{line:42,column:16}},"22":{start:{line:48,column:2},end:{line:60,column:5}},"23":{start:{line:49,column:16},end:{line:52,column:6}},"24":{start:{line:54,column:4},end:{line:54,column:36}},"25":{start:{line:55,column:4},end:{line:55,column:67}},"26":{start:{line:56,column:4},end:{line:56,column:40}},"27":{start:{line:59,column:4},end:{line:59,column:69}},"28":{start:{line:63,column:2},end:{line:71,column:5}},"29":{start:{line:64,column:16},end:{line:67,column:6}},"30":{start:{line:69,column:4},end:{line:69,column:36}},"31":{start:{line:70,column:4},end:{line:70,column:66}},"32":{start:{line:74,column:2},end:{line:82,column:5}},"33":{start:{line:75,column:16},end:{line:78,column:6}},"34":{start:{line:80,column:4},end:{line:80,column:36}},"35":{start:{line:81,column:4},end:{line:81,column:78}},"36":{start:{line:85,column:2},end:{line:99,column:5}},"37":{start:{line:88,column:16},end:{line:91,column:38}},"38":{start:{line:94,column:4},end:{line:94,column:52}},"39":{start:{line:97,column:4},end:{line:97,column:36}},"40":{start:{line:104,column:23},end:{line:106,column:3}},"41":{start:{line:109,column:2},end:{line:116,column:5}},"42":{start:{line:110,column:4},end:{line:115,column:5}},"43":{start:{line:112,column:6},end:{line:112,column:68}},"44":{start:{line:114,column:6},end:{line:114,column:18}},"45":{start:{line:119,column:2},end:{line:129,column:5}},"46":{start:{line:120,column:4},end:{line:128,column:5}},"47":{start:{line:121,column:23},end:{line:121,column:44}},"48":{start:{line:122,column:18},end:{line:122,column:84}},"49":{start:{line:124,column:6},end:{line:124,column:38}},"50":{start:{line:125,column:6},end:{line:125,column:125}},"51":{start:{line:127,column:6},end:{line:127,column:18}},"52":{start:{line:132,column:2},end:{line:142,column:5}},"53":{start:{line:133,column:4},end:{line:141,column:5}},"54":{start:{line:134,column:23},end:{line:134,column:40}},"55":{start:{line:135,column:18},end:{line:135,column:84}},"56":{start:{line:137,column:6},end:{line:137,column:38}},"57":{start:{line:138,column:6},end:{line:138,column:91}},"58":{start:{line:140,column:6},end:{line:140,column:18}},"59":{start:{line:145,column:24},end:{line:147,column:3}},"60":{start:{line:150,column:2},end:{line:157,column:5}},"61":{start:{line:151,column:4},end:{line:156,column:5}},"62":{start:{line:153,column:6},end:{line:153,column:69}},"63":{start:{line:155,column:6},end:{line:155,column:18}},"64":{start:{line:160,column:2},end:{line:170,column:5}},"65":{start:{line:161,column:4},end:{line:169,column:5}},"66":{start:{line:162,column:20},end:{line:162,column:39}},"67":{start:{line:163,column:18},end:{line:163,column:78}},"68":{start:{line:165,column:6},end:{line:165,column:38}},"69":{start:{line:166,column:6},end:{line:166,column:130}},"70":{start:{line:168,column:6},end:{line:168,column:18}},"71":{start:{line:173,column:2},end:{line:183,column:5}},"72":{start:{line:174,column:4},end:{line:182,column:5}},"73":{start:{line:175,column:20},end:{line:175,column:47}},"74":{start:{line:176,column:18},end:{line:176,column:78}},"75":{start:{line:178,column:6},end:{line:178,column:38}},"76":{start:{line:179,column:6},end:{line:179,column:88}},"77":{start:{line:181,column:6},end:{line:181,column:18}},"78":{start:{line:186,column:2},end:{line:197,column:5}},"79":{start:{line:187,column:4},end:{line:196,column:5}},"80":{start:{line:189,column:27},end:{line:189,column:41}},"81":{start:{line:190,column:18},end:{line:190,column:85}},"82":{start:{line:192,column:6},end:{line:192,column:38}},"83":{start:{line:193,column:6},end:{line:193,column:49}},"84":{start:{line:195,column:6},end:{line:195,column:18}},"85":{start:{line:199,column:2},end:{line:207,column:3}},"86":{start:{line:200,column:4},end:{line:203,column:13}},"87":{start:{line:201,column:6},end:{line:201,column:49}},"88":{start:{line:202,column:6},end:{line:202,column:21}},"89":{start:{line:205,column:4},end:{line:205,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:42},end:{line:12,column:43}},loc:{start:{line:12,column:48},end:{line:209,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:47},end:{line:16,column:48}},loc:{start:{line:16,column:59},end:{line:29,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:39},end:{line:31,column:40}},loc:{start:{line:31,column:51},end:{line:44,column:1}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:63},end:{line:48,column:64}},loc:{start:{line:48,column:75},end:{line:60,column:3}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:63,column:80},end:{line:63,column:81}},loc:{start:{line:63,column:92},end:{line:71,column:3}},line:63},"5":{name:"(anonymous_5)",decl:{start:{line:74,column:80},end:{line:74,column:81}},loc:{start:{line:74,column:92},end:{line:82,column:3}},line:74},"6":{name:"(anonymous_6)",decl:{start:{line:85,column:52},end:{line:85,column:53}},loc:{start:{line:85,column:64},end:{line:99,column:3}},line:85},"7":{name:"(anonymous_7)",decl:{start:{line:109,column:9},end:{line:109,column:10}},loc:{start:{line:109,column:21},end:{line:116,column:3}},line:109},"8":{name:"(anonymous_8)",decl:{start:{line:119,column:49},end:{line:119,column:50}},loc:{start:{line:119,column:61},end:{line:129,column:3}},line:119},"9":{name:"(anonymous_9)",decl:{start:{line:132,column:55},end:{line:132,column:56}},loc:{start:{line:132,column:67},end:{line:142,column:3}},line:132},"10":{name:"(anonymous_10)",decl:{start:{line:150,column:9},end:{line:150,column:10}},loc:{start:{line:150,column:21},end:{line:157,column:3}},line:150},"11":{name:"(anonymous_11)",decl:{start:{line:160,column:46},end:{line:160,column:47}},loc:{start:{line:160,column:58},end:{line:170,column:3}},line:160},"12":{name:"(anonymous_12)",decl:{start:{line:173,column:52},end:{line:173,column:53}},loc:{start:{line:173,column:64},end:{line:183,column:3}},line:173},"13":{name:"(anonymous_13)",decl:{start:{line:186,column:40},end:{line:186,column:41}},loc:{start:{line:186,column:52},end:{line:197,column:3}},line:186},"14":{name:"(anonymous_14)",decl:{start:{line:199,column:8},end:{line:199,column:9}},loc:{start:{line:199,column:18},end:{line:207,column:1}},line:199},"15":{name:"(anonymous_15)",decl:{start:{line:200,column:15},end:{line:200,column:16}},loc:{start:{line:200,column:21},end:{line:203,column:5}},line:200}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c4be2b8231e99a5e4a8796e9a05662d03c7c633f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28iryjq0wq=function(){return actualCoverage;};}return actualCoverage;}cov_28iryjq0wq();const chai=(cov_28iryjq0wq().s[0]++,require("chai"));const chaiHttp=(cov_28iryjq0wq().s[1]++,require("chai-http"));const app=(cov_28iryjq0wq().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_28iryjq0wq().s[3]++,chai);cov_28iryjq0wq().s[4]++;chai.use(chaiHttp);const registerPath=(cov_28iryjq0wq().s[5]++,"/api/auth/register");const loginPath=(cov_28iryjq0wq().s[6]++,"/api/auth/login");const existingUsernamePath=(cov_28iryjq0wq().s[7]++,"/api/auth/check-username");const existingEmailPath=(cov_28iryjq0wq().s[8]++,"/api/auth/check-email");cov_28iryjq0wq().s[9]++;describe("Testing Authentication Routes",()=>{cov_28iryjq0wq().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_28iryjq0wq().s[10]++;it("should register a new user successfully",async()=>{cov_28iryjq0wq().f[1]++;cov_28iryjq0wq().s[11]++;try{const res=(cov_28iryjq0wq().s[12]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[13]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[14]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_28iryjq0wq().s[15]++;throw error;}});cov_28iryjq0wq().s[16]++;it("should handle duplicate username",async()=>{cov_28iryjq0wq().f[2]++;cov_28iryjq0wq().s[17]++;try{const res=(cov_28iryjq0wq().s[18]++,await chai.request(app).post(registerPath).send({username:"luke",email:"anotheruser@gmail.com",password:"654321"}));cov_28iryjq0wq().s[19]++;expect(res).to.have.status(400);cov_28iryjq0wq().s[20]++;expect(res.body).to.have.property("error").to.equal("Username is already in use. Please choose a new username.");}catch(error){cov_28iryjq0wq().s[21]++;throw error;}});// Test case for user login
cov_28iryjq0wq().s[22]++;it("should login a user and return an authentication token",async()=>{cov_28iryjq0wq().f[3]++;const res=(cov_28iryjq0wq().s[23]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[24]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[25]++;expect(res.body).to.have.property("username").to.equal("luke");cov_28iryjq0wq().s[26]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_28iryjq0wq().s[27]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_28iryjq0wq().s[28]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_28iryjq0wq().f[4]++;const res=(cov_28iryjq0wq().s[29]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_28iryjq0wq().s[30]++;expect(res).to.have.status(404);cov_28iryjq0wq().s[31]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_28iryjq0wq().s[32]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_28iryjq0wq().f[5]++;const res=(cov_28iryjq0wq().s[33]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_28iryjq0wq().s[34]++;expect(res).to.have.status(401);cov_28iryjq0wq().s[35]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_28iryjq0wq().s[36]++;it("should refetch user information after login",async()=>{cov_28iryjq0wq().f[6]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_28iryjq0wq().s[37]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_28iryjq0wq().s[38]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_28iryjq0wq().s[39]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});const existingUser=(cov_28iryjq0wq().s[40]++,{username:"luke"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[41]++;before(async()=>{cov_28iryjq0wq().f[7]++;cov_28iryjq0wq().s[42]++;try{cov_28iryjq0wq().s[43]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingUser);}catch(error){cov_28iryjq0wq().s[44]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[45]++;it("should indicate that the username exists",async()=>{cov_28iryjq0wq().f[8]++;cov_28iryjq0wq().s[46]++;try{const username=(cov_28iryjq0wq().s[47]++,existingUser.username);const res=(cov_28iryjq0wq().s[48]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[49]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[50]++;expect(res.body).to.deep.equal({exists:true,message:"Username is already in use. Please choose a new username."});}catch(error){cov_28iryjq0wq().s[51]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[52]++;it("should indicate that the username is available",async()=>{cov_28iryjq0wq().f[9]++;cov_28iryjq0wq().s[53]++;try{const username=(cov_28iryjq0wq().s[54]++,"nonexistinguser");const res=(cov_28iryjq0wq().s[55]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[56]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[57]++;expect(res.body).to.deep.equal({exists:false,message:"Username is available."});}catch(error){cov_28iryjq0wq().s[58]++;throw error;}});const existingEmail=(cov_28iryjq0wq().s[59]++,{email:"luketankl@gmail.com"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[60]++;before(async()=>{cov_28iryjq0wq().f[10]++;cov_28iryjq0wq().s[61]++;try{cov_28iryjq0wq().s[62]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingEmail);}catch(error){cov_28iryjq0wq().s[63]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[64]++;it("should indicate that the email exists",async()=>{cov_28iryjq0wq().f[11]++;cov_28iryjq0wq().s[65]++;try{const email=(cov_28iryjq0wq().s[66]++,existingEmail.email);const res=(cov_28iryjq0wq().s[67]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[68]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[69]++;expect(res.body).to.deep.equal({exists:true,message:"Email is already in use. Please use a different email address."});}catch(error){cov_28iryjq0wq().s[70]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[71]++;it("should indicate that the email is available",async()=>{cov_28iryjq0wq().f[12]++;cov_28iryjq0wq().s[72]++;try{const email=(cov_28iryjq0wq().s[73]++,"nonexistinguser@gmail.com");const res=(cov_28iryjq0wq().s[74]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[75]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[76]++;expect(res.body).to.deep.equal({exists:false,message:"Email is available."});}catch(error){cov_28iryjq0wq().s[77]++;throw error;}});cov_28iryjq0wq().s[78]++;it("should handle errors gracefully",async()=>{cov_28iryjq0wq().f[13]++;cov_28iryjq0wq().s[79]++;try{// Provide an invalid email format to trigger an error in the endpoint
const invalidEmail=(cov_28iryjq0wq().s[80]++,"invalidemail");const res=(cov_28iryjq0wq().s[81]++,await chai.request(app).get(`${existingEmailPath}/${invalidEmail}`));cov_28iryjq0wq().s[82]++;expect(res).to.have.status(500);cov_28iryjq0wq().s[83]++;expect(res.body).to.have.property("error");}catch(error){cov_28iryjq0wq().s[84]++;throw error;}});cov_28iryjq0wq().s[85]++;after(done=>{cov_28iryjq0wq().f[14]++;cov_28iryjq0wq().s[86]++;setTimeout(()=>{cov_28iryjq0wq().f[15]++;cov_28iryjq0wq().s[87]++;console.log("Terminating the test suite.");cov_28iryjq0wq().s[88]++;process.exit();},1000);cov_28iryjq0wq().s[89]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,