function cov_28iryjq0wq(){var path="C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="893b3f2c84bfdb34c3e9ecb3472bd688a4956084";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:10,column:29},end:{line:10,column:55}},"8":{start:{line:11,column:26},end:{line:11,column:49}},"9":{start:{line:12,column:0},end:{line:217,column:3}},"10":{start:{line:16,column:1},end:{line:29,column:3}},"11":{start:{line:17,column:2},end:{line:28,column:3}},"12":{start:{line:18,column:16},end:{line:22,column:6}},"13":{start:{line:24,column:4},end:{line:24,column:36}},"14":{start:{line:25,column:4},end:{line:25,column:67}},"15":{start:{line:27,column:4},end:{line:27,column:16}},"16":{start:{line:31,column:0},end:{line:49,column:3}},"17":{start:{line:33,column:23},end:{line:36,column:3}},"18":{start:{line:39,column:2},end:{line:39,column:72}},"19":{start:{line:42,column:19},end:{line:42,column:88}},"20":{start:{line:45,column:2},end:{line:45,column:39}},"21":{start:{line:48,column:2},end:{line:48,column:145}},"22":{start:{line:51,column:0},end:{line:66,column:3}},"23":{start:{line:53,column:18},end:{line:57,column:3}},"24":{start:{line:60,column:19},end:{line:60,column:83}},"25":{start:{line:63,column:2},end:{line:63,column:39}},"26":{start:{line:70,column:2},end:{line:82,column:5}},"27":{start:{line:71,column:16},end:{line:74,column:6}},"28":{start:{line:76,column:4},end:{line:76,column:36}},"29":{start:{line:77,column:4},end:{line:77,column:67}},"30":{start:{line:78,column:4},end:{line:78,column:40}},"31":{start:{line:81,column:4},end:{line:81,column:69}},"32":{start:{line:85,column:2},end:{line:93,column:5}},"33":{start:{line:86,column:16},end:{line:89,column:6}},"34":{start:{line:91,column:4},end:{line:91,column:36}},"35":{start:{line:92,column:4},end:{line:92,column:66}},"36":{start:{line:96,column:2},end:{line:104,column:5}},"37":{start:{line:97,column:16},end:{line:100,column:6}},"38":{start:{line:102,column:4},end:{line:102,column:36}},"39":{start:{line:103,column:4},end:{line:103,column:78}},"40":{start:{line:107,column:2},end:{line:121,column:5}},"41":{start:{line:110,column:16},end:{line:113,column:38}},"42":{start:{line:116,column:4},end:{line:116,column:52}},"43":{start:{line:119,column:4},end:{line:119,column:36}},"44":{start:{line:126,column:23},end:{line:128,column:3}},"45":{start:{line:131,column:2},end:{line:138,column:5}},"46":{start:{line:132,column:4},end:{line:137,column:5}},"47":{start:{line:134,column:6},end:{line:134,column:68}},"48":{start:{line:136,column:6},end:{line:136,column:18}},"49":{start:{line:141,column:2},end:{line:151,column:5}},"50":{start:{line:142,column:4},end:{line:150,column:5}},"51":{start:{line:143,column:23},end:{line:143,column:44}},"52":{start:{line:144,column:18},end:{line:144,column:84}},"53":{start:{line:146,column:6},end:{line:146,column:38}},"54":{start:{line:147,column:6},end:{line:147,column:125}},"55":{start:{line:149,column:6},end:{line:149,column:18}},"56":{start:{line:154,column:2},end:{line:164,column:5}},"57":{start:{line:155,column:4},end:{line:163,column:5}},"58":{start:{line:156,column:23},end:{line:156,column:40}},"59":{start:{line:157,column:18},end:{line:157,column:84}},"60":{start:{line:159,column:6},end:{line:159,column:38}},"61":{start:{line:160,column:6},end:{line:160,column:91}},"62":{start:{line:162,column:6},end:{line:162,column:18}},"63":{start:{line:167,column:24},end:{line:169,column:3}},"64":{start:{line:172,column:2},end:{line:179,column:5}},"65":{start:{line:173,column:4},end:{line:178,column:5}},"66":{start:{line:175,column:6},end:{line:175,column:69}},"67":{start:{line:177,column:6},end:{line:177,column:18}},"68":{start:{line:182,column:2},end:{line:192,column:5}},"69":{start:{line:183,column:4},end:{line:191,column:5}},"70":{start:{line:184,column:20},end:{line:184,column:39}},"71":{start:{line:185,column:18},end:{line:185,column:78}},"72":{start:{line:187,column:6},end:{line:187,column:38}},"73":{start:{line:188,column:6},end:{line:188,column:130}},"74":{start:{line:190,column:6},end:{line:190,column:18}},"75":{start:{line:195,column:2},end:{line:205,column:5}},"76":{start:{line:196,column:4},end:{line:204,column:5}},"77":{start:{line:197,column:20},end:{line:197,column:47}},"78":{start:{line:198,column:18},end:{line:198,column:78}},"79":{start:{line:200,column:6},end:{line:200,column:38}},"80":{start:{line:201,column:6},end:{line:201,column:88}},"81":{start:{line:203,column:6},end:{line:203,column:18}},"82":{start:{line:207,column:2},end:{line:215,column:3}},"83":{start:{line:208,column:4},end:{line:211,column:13}},"84":{start:{line:209,column:6},end:{line:209,column:49}},"85":{start:{line:210,column:6},end:{line:210,column:21}},"86":{start:{line:213,column:4},end:{line:213,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:42},end:{line:12,column:43}},loc:{start:{line:12,column:48},end:{line:217,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:47},end:{line:16,column:48}},loc:{start:{line:16,column:59},end:{line:29,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:89},end:{line:31,column:90}},loc:{start:{line:31,column:101},end:{line:49,column:1}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:92},end:{line:51,column:93}},loc:{start:{line:51,column:104},end:{line:66,column:1}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:70,column:63},end:{line:70,column:64}},loc:{start:{line:70,column:75},end:{line:82,column:3}},line:70},"5":{name:"(anonymous_5)",decl:{start:{line:85,column:80},end:{line:85,column:81}},loc:{start:{line:85,column:92},end:{line:93,column:3}},line:85},"6":{name:"(anonymous_6)",decl:{start:{line:96,column:80},end:{line:96,column:81}},loc:{start:{line:96,column:92},end:{line:104,column:3}},line:96},"7":{name:"(anonymous_7)",decl:{start:{line:107,column:52},end:{line:107,column:53}},loc:{start:{line:107,column:64},end:{line:121,column:3}},line:107},"8":{name:"(anonymous_8)",decl:{start:{line:131,column:9},end:{line:131,column:10}},loc:{start:{line:131,column:21},end:{line:138,column:3}},line:131},"9":{name:"(anonymous_9)",decl:{start:{line:141,column:49},end:{line:141,column:50}},loc:{start:{line:141,column:61},end:{line:151,column:3}},line:141},"10":{name:"(anonymous_10)",decl:{start:{line:154,column:55},end:{line:154,column:56}},loc:{start:{line:154,column:67},end:{line:164,column:3}},line:154},"11":{name:"(anonymous_11)",decl:{start:{line:172,column:9},end:{line:172,column:10}},loc:{start:{line:172,column:21},end:{line:179,column:3}},line:172},"12":{name:"(anonymous_12)",decl:{start:{line:182,column:46},end:{line:182,column:47}},loc:{start:{line:182,column:58},end:{line:192,column:3}},line:182},"13":{name:"(anonymous_13)",decl:{start:{line:195,column:52},end:{line:195,column:53}},loc:{start:{line:195,column:64},end:{line:205,column:3}},line:195},"14":{name:"(anonymous_14)",decl:{start:{line:207,column:8},end:{line:207,column:9}},loc:{start:{line:207,column:18},end:{line:215,column:1}},line:207},"15":{name:"(anonymous_15)",decl:{start:{line:208,column:15},end:{line:208,column:16}},loc:{start:{line:208,column:21},end:{line:211,column:5}},line:208}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"893b3f2c84bfdb34c3e9ecb3472bd688a4956084"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28iryjq0wq=function(){return actualCoverage;};}return actualCoverage;}cov_28iryjq0wq();const chai=(cov_28iryjq0wq().s[0]++,require("chai"));const chaiHttp=(cov_28iryjq0wq().s[1]++,require("chai-http"));const app=(cov_28iryjq0wq().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_28iryjq0wq().s[3]++,chai);cov_28iryjq0wq().s[4]++;chai.use(chaiHttp);const registerPath=(cov_28iryjq0wq().s[5]++,"/api/auth/register");const loginPath=(cov_28iryjq0wq().s[6]++,"/api/auth/login");const existingUsernamePath=(cov_28iryjq0wq().s[7]++,"/api/auth/check-username");const existingEmailPath=(cov_28iryjq0wq().s[8]++,"/api/auth/check-email");cov_28iryjq0wq().s[9]++;describe("Testing Authentication Routes",()=>{cov_28iryjq0wq().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_28iryjq0wq().s[10]++;it("should register a new user successfully",async()=>{cov_28iryjq0wq().f[1]++;cov_28iryjq0wq().s[11]++;try{const res=(cov_28iryjq0wq().s[12]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[13]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[14]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_28iryjq0wq().s[15]++;throw error;}});cov_28iryjq0wq().s[16]++;it('should return an error message if username and email combination is already in use',async()=>{cov_28iryjq0wq().f[2]++;// Define an existing user with the same username and email
const existingUser=(cov_28iryjq0wq().s[17]++,{username:'existingUser',email:'existing@example.com'});// Register the existing user
cov_28iryjq0wq().s[18]++;await chai.request(app).post('/api/auth/register').send(existingUser);// Try to register the existing user again
const response=(cov_28iryjq0wq().s[19]++,await chai.request(app).post('/api/auth/register').send(existingUser));// Assert that the response status is 400 (Bad Request)
cov_28iryjq0wq().s[20]++;expect(response).to.have.status(400);// Assert that the response body contains the expected error message
cov_28iryjq0wq().s[21]++;expect(response.body).to.have.property('error').to.equal('Username and email combination is already in use. Please choose a new combination.');});cov_28iryjq0wq().s[22]++;it('should proceed with user registration if username and email combination is not in use',async()=>{cov_28iryjq0wq().f[3]++;// Define a new user with a unique username and email
const newUser=(cov_28iryjq0wq().s[23]++,{username:'newUser',email:'new@example.com',password:'password123'});// Try to register the new user
const response=(cov_28iryjq0wq().s[24]++,await chai.request(app).post('/api/auth/register').send(newUser));// Assert that the response status is 200 (OK)
cov_28iryjq0wq().s[25]++;expect(response).to.have.status(200);// Assert any other necessary assertions based on the response body or behavior
});// Test case for user login
cov_28iryjq0wq().s[26]++;it("should login a user and return an authentication token",async()=>{cov_28iryjq0wq().f[4]++;const res=(cov_28iryjq0wq().s[27]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[28]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[29]++;expect(res.body).to.have.property("username").to.equal("luke");cov_28iryjq0wq().s[30]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_28iryjq0wq().s[31]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_28iryjq0wq().s[32]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_28iryjq0wq().f[5]++;const res=(cov_28iryjq0wq().s[33]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_28iryjq0wq().s[34]++;expect(res).to.have.status(404);cov_28iryjq0wq().s[35]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_28iryjq0wq().s[36]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_28iryjq0wq().f[6]++;const res=(cov_28iryjq0wq().s[37]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_28iryjq0wq().s[38]++;expect(res).to.have.status(401);cov_28iryjq0wq().s[39]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_28iryjq0wq().s[40]++;it("should refetch user information after login",async()=>{cov_28iryjq0wq().f[7]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_28iryjq0wq().s[41]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_28iryjq0wq().s[42]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_28iryjq0wq().s[43]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});const existingUser=(cov_28iryjq0wq().s[44]++,{username:"luke"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[45]++;before(async()=>{cov_28iryjq0wq().f[8]++;cov_28iryjq0wq().s[46]++;try{cov_28iryjq0wq().s[47]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingUser);}catch(error){cov_28iryjq0wq().s[48]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[49]++;it("should indicate that the username exists",async()=>{cov_28iryjq0wq().f[9]++;cov_28iryjq0wq().s[50]++;try{const username=(cov_28iryjq0wq().s[51]++,existingUser.username);const res=(cov_28iryjq0wq().s[52]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[53]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[54]++;expect(res.body).to.deep.equal({exists:true,message:"Username is already in use. Please choose a new username."});}catch(error){cov_28iryjq0wq().s[55]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[56]++;it("should indicate that the username is available",async()=>{cov_28iryjq0wq().f[10]++;cov_28iryjq0wq().s[57]++;try{const username=(cov_28iryjq0wq().s[58]++,"nonexistinguser");const res=(cov_28iryjq0wq().s[59]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[60]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[61]++;expect(res.body).to.deep.equal({exists:false,message:"Username is available."});}catch(error){cov_28iryjq0wq().s[62]++;throw error;}});const existingEmail=(cov_28iryjq0wq().s[63]++,{email:"luketankl@gmail.com"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[64]++;before(async()=>{cov_28iryjq0wq().f[11]++;cov_28iryjq0wq().s[65]++;try{cov_28iryjq0wq().s[66]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingEmail);}catch(error){cov_28iryjq0wq().s[67]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[68]++;it("should indicate that the email exists",async()=>{cov_28iryjq0wq().f[12]++;cov_28iryjq0wq().s[69]++;try{const email=(cov_28iryjq0wq().s[70]++,existingEmail.email);const res=(cov_28iryjq0wq().s[71]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[72]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[73]++;expect(res.body).to.deep.equal({exists:true,message:"Email is already in use. Please use a different email address."});}catch(error){cov_28iryjq0wq().s[74]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[75]++;it("should indicate that the email is available",async()=>{cov_28iryjq0wq().f[13]++;cov_28iryjq0wq().s[76]++;try{const email=(cov_28iryjq0wq().s[77]++,"nonexistinguser@gmail.com");const res=(cov_28iryjq0wq().s[78]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[79]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[80]++;expect(res.body).to.deep.equal({exists:false,message:"Email is available."});}catch(error){cov_28iryjq0wq().s[81]++;throw error;}});cov_28iryjq0wq().s[82]++;after(done=>{cov_28iryjq0wq().f[14]++;cov_28iryjq0wq().s[83]++;setTimeout(()=>{cov_28iryjq0wq().f[15]++;cov_28iryjq0wq().s[84]++;console.log("Terminating the test suite.");cov_28iryjq0wq().s[85]++;process.exit();},1000);cov_28iryjq0wq().s[86]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,