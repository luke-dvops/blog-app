function cov_jlmvyxn9b(){var path="C:\\Users\\QJ200\\OneDrive\\Desktop\\Devops\\new2\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="f825671f2e07872c6be0ef632a97ec2a289213d7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\QJ200\\OneDrive\\Desktop\\Devops\\new2\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:10,column:29},end:{line:10,column:55}},"8":{start:{line:11,column:26},end:{line:11,column:49}},"9":{start:{line:12,column:0},end:{line:221,column:3}},"10":{start:{line:16,column:1},end:{line:29,column:3}},"11":{start:{line:17,column:2},end:{line:28,column:3}},"12":{start:{line:18,column:16},end:{line:22,column:6}},"13":{start:{line:24,column:4},end:{line:24,column:36}},"14":{start:{line:25,column:4},end:{line:25,column:67}},"15":{start:{line:27,column:4},end:{line:27,column:16}},"16":{start:{line:31,column:0},end:{line:49,column:3}},"17":{start:{line:33,column:23},end:{line:36,column:3}},"18":{start:{line:39,column:2},end:{line:39,column:72}},"19":{start:{line:42,column:19},end:{line:42,column:88}},"20":{start:{line:45,column:2},end:{line:45,column:39}},"21":{start:{line:48,column:2},end:{line:48,column:145}},"22":{start:{line:51,column:0},end:{line:70,column:3}},"23":{start:{line:52,column:2},end:{line:69,column:3}},"24":{start:{line:53,column:16},end:{line:60,column:8}},"25":{start:{line:62,column:4},end:{line:62,column:36}},"26":{start:{line:63,column:4},end:{line:63,column:77}},"27":{start:{line:64,column:4},end:{line:64,column:83}},"28":{start:{line:68,column:4},end:{line:68,column:16}},"29":{start:{line:74,column:2},end:{line:86,column:5}},"30":{start:{line:75,column:16},end:{line:78,column:6}},"31":{start:{line:80,column:4},end:{line:80,column:36}},"32":{start:{line:81,column:4},end:{line:81,column:67}},"33":{start:{line:82,column:4},end:{line:82,column:40}},"34":{start:{line:85,column:4},end:{line:85,column:69}},"35":{start:{line:89,column:2},end:{line:97,column:5}},"36":{start:{line:90,column:16},end:{line:93,column:6}},"37":{start:{line:95,column:4},end:{line:95,column:36}},"38":{start:{line:96,column:4},end:{line:96,column:66}},"39":{start:{line:100,column:2},end:{line:108,column:5}},"40":{start:{line:101,column:16},end:{line:104,column:6}},"41":{start:{line:106,column:4},end:{line:106,column:36}},"42":{start:{line:107,column:4},end:{line:107,column:78}},"43":{start:{line:111,column:2},end:{line:125,column:5}},"44":{start:{line:114,column:16},end:{line:117,column:38}},"45":{start:{line:120,column:4},end:{line:120,column:52}},"46":{start:{line:123,column:4},end:{line:123,column:36}},"47":{start:{line:130,column:23},end:{line:132,column:3}},"48":{start:{line:135,column:2},end:{line:142,column:5}},"49":{start:{line:136,column:4},end:{line:141,column:5}},"50":{start:{line:138,column:6},end:{line:138,column:68}},"51":{start:{line:140,column:6},end:{line:140,column:18}},"52":{start:{line:145,column:2},end:{line:155,column:5}},"53":{start:{line:146,column:4},end:{line:154,column:5}},"54":{start:{line:147,column:23},end:{line:147,column:44}},"55":{start:{line:148,column:18},end:{line:148,column:84}},"56":{start:{line:150,column:6},end:{line:150,column:38}},"57":{start:{line:151,column:6},end:{line:151,column:125}},"58":{start:{line:153,column:6},end:{line:153,column:18}},"59":{start:{line:158,column:2},end:{line:168,column:5}},"60":{start:{line:159,column:4},end:{line:167,column:5}},"61":{start:{line:160,column:23},end:{line:160,column:40}},"62":{start:{line:161,column:18},end:{line:161,column:84}},"63":{start:{line:163,column:6},end:{line:163,column:38}},"64":{start:{line:164,column:6},end:{line:164,column:91}},"65":{start:{line:166,column:6},end:{line:166,column:18}},"66":{start:{line:171,column:24},end:{line:173,column:3}},"67":{start:{line:176,column:2},end:{line:183,column:5}},"68":{start:{line:177,column:4},end:{line:182,column:5}},"69":{start:{line:179,column:6},end:{line:179,column:69}},"70":{start:{line:181,column:6},end:{line:181,column:18}},"71":{start:{line:186,column:2},end:{line:196,column:5}},"72":{start:{line:187,column:4},end:{line:195,column:5}},"73":{start:{line:188,column:20},end:{line:188,column:39}},"74":{start:{line:189,column:18},end:{line:189,column:78}},"75":{start:{line:191,column:6},end:{line:191,column:38}},"76":{start:{line:192,column:6},end:{line:192,column:130}},"77":{start:{line:194,column:6},end:{line:194,column:18}},"78":{start:{line:199,column:2},end:{line:209,column:5}},"79":{start:{line:200,column:4},end:{line:208,column:5}},"80":{start:{line:201,column:20},end:{line:201,column:47}},"81":{start:{line:202,column:18},end:{line:202,column:78}},"82":{start:{line:204,column:6},end:{line:204,column:38}},"83":{start:{line:205,column:6},end:{line:205,column:88}},"84":{start:{line:207,column:6},end:{line:207,column:18}},"85":{start:{line:211,column:2},end:{line:219,column:3}},"86":{start:{line:212,column:4},end:{line:215,column:13}},"87":{start:{line:213,column:6},end:{line:213,column:49}},"88":{start:{line:214,column:6},end:{line:214,column:21}},"89":{start:{line:217,column:4},end:{line:217,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:42},end:{line:12,column:43}},loc:{start:{line:12,column:48},end:{line:221,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:47},end:{line:16,column:48}},loc:{start:{line:16,column:59},end:{line:29,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:89},end:{line:31,column:90}},loc:{start:{line:31,column:101},end:{line:49,column:1}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:55},end:{line:51,column:56}},loc:{start:{line:51,column:67},end:{line:70,column:1}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:74,column:63},end:{line:74,column:64}},loc:{start:{line:74,column:75},end:{line:86,column:3}},line:74},"5":{name:"(anonymous_5)",decl:{start:{line:89,column:80},end:{line:89,column:81}},loc:{start:{line:89,column:92},end:{line:97,column:3}},line:89},"6":{name:"(anonymous_6)",decl:{start:{line:100,column:80},end:{line:100,column:81}},loc:{start:{line:100,column:92},end:{line:108,column:3}},line:100},"7":{name:"(anonymous_7)",decl:{start:{line:111,column:52},end:{line:111,column:53}},loc:{start:{line:111,column:64},end:{line:125,column:3}},line:111},"8":{name:"(anonymous_8)",decl:{start:{line:135,column:9},end:{line:135,column:10}},loc:{start:{line:135,column:21},end:{line:142,column:3}},line:135},"9":{name:"(anonymous_9)",decl:{start:{line:145,column:49},end:{line:145,column:50}},loc:{start:{line:145,column:61},end:{line:155,column:3}},line:145},"10":{name:"(anonymous_10)",decl:{start:{line:158,column:55},end:{line:158,column:56}},loc:{start:{line:158,column:67},end:{line:168,column:3}},line:158},"11":{name:"(anonymous_11)",decl:{start:{line:176,column:9},end:{line:176,column:10}},loc:{start:{line:176,column:21},end:{line:183,column:3}},line:176},"12":{name:"(anonymous_12)",decl:{start:{line:186,column:46},end:{line:186,column:47}},loc:{start:{line:186,column:58},end:{line:196,column:3}},line:186},"13":{name:"(anonymous_13)",decl:{start:{line:199,column:52},end:{line:199,column:53}},loc:{start:{line:199,column:64},end:{line:209,column:3}},line:199},"14":{name:"(anonymous_14)",decl:{start:{line:211,column:8},end:{line:211,column:9}},loc:{start:{line:211,column:18},end:{line:219,column:1}},line:211},"15":{name:"(anonymous_15)",decl:{start:{line:212,column:15},end:{line:212,column:16}},loc:{start:{line:212,column:21},end:{line:215,column:5}},line:212}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f825671f2e07872c6be0ef632a97ec2a289213d7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_jlmvyxn9b=function(){return actualCoverage;};}return actualCoverage;}cov_jlmvyxn9b();const chai=(cov_jlmvyxn9b().s[0]++,require("chai"));const chaiHttp=(cov_jlmvyxn9b().s[1]++,require("chai-http"));const app=(cov_jlmvyxn9b().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_jlmvyxn9b().s[3]++,chai);cov_jlmvyxn9b().s[4]++;chai.use(chaiHttp);const registerPath=(cov_jlmvyxn9b().s[5]++,"/api/auth/register");const loginPath=(cov_jlmvyxn9b().s[6]++,"/api/auth/login");const existingUsernamePath=(cov_jlmvyxn9b().s[7]++,"/api/auth/check-username");const existingEmailPath=(cov_jlmvyxn9b().s[8]++,"/api/auth/check-email");cov_jlmvyxn9b().s[9]++;describe("Testing Authentication Routes",()=>{cov_jlmvyxn9b().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_jlmvyxn9b().s[10]++;it("should register a new user successfully",async()=>{cov_jlmvyxn9b().f[1]++;cov_jlmvyxn9b().s[11]++;try{const res=(cov_jlmvyxn9b().s[12]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_jlmvyxn9b().s[13]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[14]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_jlmvyxn9b().s[15]++;throw error;}});cov_jlmvyxn9b().s[16]++;it('should return an error message if username and email combination is already in use',async()=>{cov_jlmvyxn9b().f[2]++;// Define an existing user with the same username and email
const existingUser=(cov_jlmvyxn9b().s[17]++,{username:'luke',email:'luketankl@gmail.com'});// Register the existing user
cov_jlmvyxn9b().s[18]++;await chai.request(app).post('/api/auth/register').send(existingUser);// Try to register the existing user again
const response=(cov_jlmvyxn9b().s[19]++,await chai.request(app).post('/api/auth/register').send(existingUser));// Assert that the response status is 400 (Bad Request)
cov_jlmvyxn9b().s[20]++;expect(response).to.have.status(400);// Assert that the response body contains the expected error message
cov_jlmvyxn9b().s[21]++;expect(response.body).to.have.property('error').to.equal('Username and email combination is already in use. Please choose a new combination.');});cov_jlmvyxn9b().s[22]++;it("should continue register a new user successfully",async()=>{cov_jlmvyxn9b().f[3]++;cov_jlmvyxn9b().s[23]++;try{const res=(cov_jlmvyxn9b().s[24]++,await chai.request(app).post("/api/auth/register").send({username:"uniqueusername",email:"uniqueemail@example.com",password:"password123"}));cov_jlmvyxn9b().s[25]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[26]++;expect(res.body).to.have.property("username").to.equal("uniqueusername");cov_jlmvyxn9b().s[27]++;expect(res.body).to.have.property("email").to.equal("uniqueemail@example.com");// Add more assertions as needed
}catch(error){cov_jlmvyxn9b().s[28]++;throw error;}});// Test case for user login
cov_jlmvyxn9b().s[29]++;it("should login a user and return an authentication token",async()=>{cov_jlmvyxn9b().f[4]++;const res=(cov_jlmvyxn9b().s[30]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_jlmvyxn9b().s[31]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[32]++;expect(res.body).to.have.property("username").to.equal("luke");cov_jlmvyxn9b().s[33]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_jlmvyxn9b().s[34]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_jlmvyxn9b().s[35]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_jlmvyxn9b().f[5]++;const res=(cov_jlmvyxn9b().s[36]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_jlmvyxn9b().s[37]++;expect(res).to.have.status(404);cov_jlmvyxn9b().s[38]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_jlmvyxn9b().s[39]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_jlmvyxn9b().f[6]++;const res=(cov_jlmvyxn9b().s[40]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_jlmvyxn9b().s[41]++;expect(res).to.have.status(401);cov_jlmvyxn9b().s[42]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_jlmvyxn9b().s[43]++;it("should refetch user information after login",async()=>{cov_jlmvyxn9b().f[7]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_jlmvyxn9b().s[44]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_jlmvyxn9b().s[45]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_jlmvyxn9b().s[46]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});const existingUser=(cov_jlmvyxn9b().s[47]++,{username:"luke"});// Before running the tests, register an existing user
cov_jlmvyxn9b().s[48]++;before(async()=>{cov_jlmvyxn9b().f[8]++;cov_jlmvyxn9b().s[49]++;try{cov_jlmvyxn9b().s[50]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingUser);}catch(error){cov_jlmvyxn9b().s[51]++;throw error;}});// Test case for checking an existing username
cov_jlmvyxn9b().s[52]++;it("should indicate that the username exists",async()=>{cov_jlmvyxn9b().f[9]++;cov_jlmvyxn9b().s[53]++;try{const username=(cov_jlmvyxn9b().s[54]++,existingUser.username);const res=(cov_jlmvyxn9b().s[55]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_jlmvyxn9b().s[56]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[57]++;expect(res.body).to.deep.equal({exists:true,message:"Username is already in use. Please choose a new username."});}catch(error){cov_jlmvyxn9b().s[58]++;throw error;}});// Test case for checking a non-existing username
cov_jlmvyxn9b().s[59]++;it("should indicate that the username is available",async()=>{cov_jlmvyxn9b().f[10]++;cov_jlmvyxn9b().s[60]++;try{const username=(cov_jlmvyxn9b().s[61]++,"nonexistinguser");const res=(cov_jlmvyxn9b().s[62]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_jlmvyxn9b().s[63]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[64]++;expect(res.body).to.deep.equal({exists:false,message:"Username is available."});}catch(error){cov_jlmvyxn9b().s[65]++;throw error;}});const existingEmail=(cov_jlmvyxn9b().s[66]++,{email:"luketankl@gmail.com"});// Before running the tests, register an existing user
cov_jlmvyxn9b().s[67]++;before(async()=>{cov_jlmvyxn9b().f[11]++;cov_jlmvyxn9b().s[68]++;try{cov_jlmvyxn9b().s[69]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingEmail);}catch(error){cov_jlmvyxn9b().s[70]++;throw error;}});// Test case for checking an existing username
cov_jlmvyxn9b().s[71]++;it("should indicate that the email exists",async()=>{cov_jlmvyxn9b().f[12]++;cov_jlmvyxn9b().s[72]++;try{const email=(cov_jlmvyxn9b().s[73]++,existingEmail.email);const res=(cov_jlmvyxn9b().s[74]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_jlmvyxn9b().s[75]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[76]++;expect(res.body).to.deep.equal({exists:true,message:"Email is already in use. Please use a different email address."});}catch(error){cov_jlmvyxn9b().s[77]++;throw error;}});// Test case for checking a non-existing username
cov_jlmvyxn9b().s[78]++;it("should indicate that the email is available",async()=>{cov_jlmvyxn9b().f[13]++;cov_jlmvyxn9b().s[79]++;try{const email=(cov_jlmvyxn9b().s[80]++,"nonexistinguser@gmail.com");const res=(cov_jlmvyxn9b().s[81]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_jlmvyxn9b().s[82]++;expect(res).to.have.status(200);cov_jlmvyxn9b().s[83]++;expect(res.body).to.deep.equal({exists:false,message:"Email is available."});}catch(error){cov_jlmvyxn9b().s[84]++;throw error;}});cov_jlmvyxn9b().s[85]++;after(done=>{cov_jlmvyxn9b().f[14]++;cov_jlmvyxn9b().s[86]++;setTimeout(()=>{cov_jlmvyxn9b().f[15]++;cov_jlmvyxn9b().s[87]++;console.log("Terminating the test suite.");cov_jlmvyxn9b().s[88]++;process.exit();},1000);cov_jlmvyxn9b().s[89]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,