function cov_28iryjq0wq(){var path="C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js";var hash="99f830cc2d07ffe89f0d0b7e876afe635e2c8af4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Downloads\\blog-app\\backend\\tests\\testAuthRoutes.test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:6,column:0},end:{line:6,column:19}},"5":{start:{line:8,column:21},end:{line:8,column:41}},"6":{start:{line:9,column:18},end:{line:9,column:35}},"7":{start:{line:10,column:29},end:{line:10,column:55}},"8":{start:{line:11,column:26},end:{line:11,column:49}},"9":{start:{line:12,column:0},end:{line:181,column:3}},"10":{start:{line:16,column:1},end:{line:29,column:3}},"11":{start:{line:17,column:2},end:{line:28,column:3}},"12":{start:{line:18,column:16},end:{line:22,column:6}},"13":{start:{line:24,column:4},end:{line:24,column:36}},"14":{start:{line:25,column:4},end:{line:25,column:67}},"15":{start:{line:27,column:4},end:{line:27,column:16}},"16":{start:{line:34,column:2},end:{line:46,column:5}},"17":{start:{line:35,column:16},end:{line:38,column:6}},"18":{start:{line:40,column:4},end:{line:40,column:36}},"19":{start:{line:41,column:4},end:{line:41,column:67}},"20":{start:{line:42,column:4},end:{line:42,column:40}},"21":{start:{line:45,column:4},end:{line:45,column:69}},"22":{start:{line:49,column:2},end:{line:57,column:5}},"23":{start:{line:50,column:16},end:{line:53,column:6}},"24":{start:{line:55,column:4},end:{line:55,column:36}},"25":{start:{line:56,column:4},end:{line:56,column:66}},"26":{start:{line:60,column:2},end:{line:68,column:5}},"27":{start:{line:61,column:16},end:{line:64,column:6}},"28":{start:{line:66,column:4},end:{line:66,column:36}},"29":{start:{line:67,column:4},end:{line:67,column:78}},"30":{start:{line:71,column:2},end:{line:85,column:5}},"31":{start:{line:74,column:16},end:{line:77,column:38}},"32":{start:{line:80,column:4},end:{line:80,column:52}},"33":{start:{line:83,column:4},end:{line:83,column:36}},"34":{start:{line:90,column:23},end:{line:92,column:3}},"35":{start:{line:95,column:2},end:{line:102,column:5}},"36":{start:{line:96,column:4},end:{line:101,column:5}},"37":{start:{line:98,column:6},end:{line:98,column:68}},"38":{start:{line:100,column:6},end:{line:100,column:18}},"39":{start:{line:105,column:2},end:{line:115,column:5}},"40":{start:{line:106,column:4},end:{line:114,column:5}},"41":{start:{line:107,column:23},end:{line:107,column:44}},"42":{start:{line:108,column:18},end:{line:108,column:84}},"43":{start:{line:110,column:6},end:{line:110,column:38}},"44":{start:{line:111,column:6},end:{line:111,column:125}},"45":{start:{line:113,column:6},end:{line:113,column:18}},"46":{start:{line:118,column:2},end:{line:128,column:5}},"47":{start:{line:119,column:4},end:{line:127,column:5}},"48":{start:{line:120,column:23},end:{line:120,column:40}},"49":{start:{line:121,column:18},end:{line:121,column:84}},"50":{start:{line:123,column:6},end:{line:123,column:38}},"51":{start:{line:124,column:6},end:{line:124,column:91}},"52":{start:{line:126,column:6},end:{line:126,column:18}},"53":{start:{line:131,column:24},end:{line:133,column:3}},"54":{start:{line:136,column:2},end:{line:143,column:5}},"55":{start:{line:137,column:4},end:{line:142,column:5}},"56":{start:{line:139,column:6},end:{line:139,column:69}},"57":{start:{line:141,column:6},end:{line:141,column:18}},"58":{start:{line:146,column:2},end:{line:156,column:5}},"59":{start:{line:147,column:4},end:{line:155,column:5}},"60":{start:{line:148,column:20},end:{line:148,column:39}},"61":{start:{line:149,column:18},end:{line:149,column:78}},"62":{start:{line:151,column:6},end:{line:151,column:38}},"63":{start:{line:152,column:6},end:{line:152,column:130}},"64":{start:{line:154,column:6},end:{line:154,column:18}},"65":{start:{line:159,column:2},end:{line:169,column:5}},"66":{start:{line:160,column:4},end:{line:168,column:5}},"67":{start:{line:161,column:20},end:{line:161,column:47}},"68":{start:{line:162,column:18},end:{line:162,column:78}},"69":{start:{line:164,column:6},end:{line:164,column:38}},"70":{start:{line:165,column:6},end:{line:165,column:88}},"71":{start:{line:167,column:6},end:{line:167,column:18}},"72":{start:{line:171,column:2},end:{line:179,column:3}},"73":{start:{line:172,column:4},end:{line:175,column:13}},"74":{start:{line:173,column:6},end:{line:173,column:49}},"75":{start:{line:174,column:6},end:{line:174,column:21}},"76":{start:{line:177,column:4},end:{line:177,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:42},end:{line:12,column:43}},loc:{start:{line:12,column:48},end:{line:181,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:47},end:{line:16,column:48}},loc:{start:{line:16,column:59},end:{line:29,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:63},end:{line:34,column:64}},loc:{start:{line:34,column:75},end:{line:46,column:3}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:80},end:{line:49,column:81}},loc:{start:{line:49,column:92},end:{line:57,column:3}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:80},end:{line:60,column:81}},loc:{start:{line:60,column:92},end:{line:68,column:3}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:71,column:52},end:{line:71,column:53}},loc:{start:{line:71,column:64},end:{line:85,column:3}},line:71},"6":{name:"(anonymous_6)",decl:{start:{line:95,column:9},end:{line:95,column:10}},loc:{start:{line:95,column:21},end:{line:102,column:3}},line:95},"7":{name:"(anonymous_7)",decl:{start:{line:105,column:49},end:{line:105,column:50}},loc:{start:{line:105,column:61},end:{line:115,column:3}},line:105},"8":{name:"(anonymous_8)",decl:{start:{line:118,column:55},end:{line:118,column:56}},loc:{start:{line:118,column:67},end:{line:128,column:3}},line:118},"9":{name:"(anonymous_9)",decl:{start:{line:136,column:9},end:{line:136,column:10}},loc:{start:{line:136,column:21},end:{line:143,column:3}},line:136},"10":{name:"(anonymous_10)",decl:{start:{line:146,column:46},end:{line:146,column:47}},loc:{start:{line:146,column:58},end:{line:156,column:3}},line:146},"11":{name:"(anonymous_11)",decl:{start:{line:159,column:52},end:{line:159,column:53}},loc:{start:{line:159,column:64},end:{line:169,column:3}},line:159},"12":{name:"(anonymous_12)",decl:{start:{line:171,column:8},end:{line:171,column:9}},loc:{start:{line:171,column:18},end:{line:179,column:1}},line:171},"13":{name:"(anonymous_13)",decl:{start:{line:172,column:15},end:{line:172,column:16}},loc:{start:{line:172,column:21},end:{line:175,column:5}},line:172}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"99f830cc2d07ffe89f0d0b7e876afe635e2c8af4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28iryjq0wq=function(){return actualCoverage;};}return actualCoverage;}cov_28iryjq0wq();const chai=(cov_28iryjq0wq().s[0]++,require("chai"));const chaiHttp=(cov_28iryjq0wq().s[1]++,require("chai-http"));const app=(cov_28iryjq0wq().s[2]++,require("../index"));// Replace with the actual path to your Express app
const{expect}=(cov_28iryjq0wq().s[3]++,chai);cov_28iryjq0wq().s[4]++;chai.use(chaiHttp);const registerPath=(cov_28iryjq0wq().s[5]++,"/api/auth/register");const loginPath=(cov_28iryjq0wq().s[6]++,"/api/auth/login");const existingUsernamePath=(cov_28iryjq0wq().s[7]++,"/api/auth/check-username");const existingEmailPath=(cov_28iryjq0wq().s[8]++,"/api/auth/check-email");cov_28iryjq0wq().s[9]++;describe("Testing Authentication Routes",()=>{cov_28iryjq0wq().f[0]++;let token;// Variable to store the authentication token for further requests
// Test case for user registration
cov_28iryjq0wq().s[10]++;it("should register a new user successfully",async()=>{cov_28iryjq0wq().f[1]++;cov_28iryjq0wq().s[11]++;try{const res=(cov_28iryjq0wq().s[12]++,await chai.request(app).post(registerPath).send({username:"luke",email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[13]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[14]++;expect(res.body).to.have.property("username").to.equal("luke");}catch(error){cov_28iryjq0wq().s[15]++;throw error;}});// Test case for user login
cov_28iryjq0wq().s[16]++;it("should login a user and return an authentication token",async()=>{cov_28iryjq0wq().f[2]++;const res=(cov_28iryjq0wq().s[17]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"123456"}));cov_28iryjq0wq().s[18]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[19]++;expect(res.body).to.have.property("username").to.equal("luke");cov_28iryjq0wq().s[20]++;expect(res).to.have.cookie("token");// Check if the response has a 'token' cookie
// Save the token for further requests (e.g., authenticated routes)
cov_28iryjq0wq().s[21]++;token=res.headers["set-cookie"][0].split(";")[0].split("=")[1];});// Test case for user login with incorrect username
cov_28iryjq0wq().s[22]++;it("should return an error when attempting to login with incorrect username",async()=>{cov_28iryjq0wq().f[3]++;const res=(cov_28iryjq0wq().s[23]++,await chai.request(app).post(loginPath).send({email:"wrongemail@gmail.com",password:"123456"}));cov_28iryjq0wq().s[24]++;expect(res).to.have.status(404);cov_28iryjq0wq().s[25]++;expect(res.body).to.have.property('error','User not found!');});// Test case for user login with incorrect password
cov_28iryjq0wq().s[26]++;it("should return an error when attempting to login with incorrect password",async()=>{cov_28iryjq0wq().f[4]++;const res=(cov_28iryjq0wq().s[27]++,await chai.request(app).post(loginPath).send({email:"luketankl@gmail.com",password:"wrongpassword"}));cov_28iryjq0wq().s[28]++;expect(res).to.have.status(401);cov_28iryjq0wq().s[29]++;expect(res.body).to.have.property("error").to.equal("Wrong credentials!");});// Test case for refetching user information
cov_28iryjq0wq().s[30]++;it("should refetch user information after login",async()=>{cov_28iryjq0wq().f[5]++;// Assuming you have the 'token' variable containing the JWT from a successful login
const res=(cov_28iryjq0wq().s[31]++,await chai.request(app).get("/api/auth/refetch").set("Cookie",`token=${token}`));// Set the token in the 'Cookie' header
// Log the response to the console for further inspection
cov_28iryjq0wq().s[32]++;console.log("Response from Refetch:",res.body);// Your assertions based on the response
cov_28iryjq0wq().s[33]++;expect(res).to.have.status(200);// Add more assertions based on the expected response
});const existingUser=(cov_28iryjq0wq().s[34]++,{username:"luke"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[35]++;before(async()=>{cov_28iryjq0wq().f[6]++;cov_28iryjq0wq().s[36]++;try{cov_28iryjq0wq().s[37]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingUser);}catch(error){cov_28iryjq0wq().s[38]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[39]++;it("should indicate that the username exists",async()=>{cov_28iryjq0wq().f[7]++;cov_28iryjq0wq().s[40]++;try{const username=(cov_28iryjq0wq().s[41]++,existingUser.username);const res=(cov_28iryjq0wq().s[42]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[43]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[44]++;expect(res.body).to.deep.equal({exists:true,message:"Username is already in use. Please choose a new username."});}catch(error){cov_28iryjq0wq().s[45]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[46]++;it("should indicate that the username is available",async()=>{cov_28iryjq0wq().f[8]++;cov_28iryjq0wq().s[47]++;try{const username=(cov_28iryjq0wq().s[48]++,"nonexistinguser");const res=(cov_28iryjq0wq().s[49]++,await chai.request(app).get(`${existingUsernamePath}/${username}`));cov_28iryjq0wq().s[50]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[51]++;expect(res.body).to.deep.equal({exists:false,message:"Username is available."});}catch(error){cov_28iryjq0wq().s[52]++;throw error;}});const existingEmail=(cov_28iryjq0wq().s[53]++,{email:"luketankl@gmail.com"});// Before running the tests, register an existing user
cov_28iryjq0wq().s[54]++;before(async()=>{cov_28iryjq0wq().f[9]++;cov_28iryjq0wq().s[55]++;try{cov_28iryjq0wq().s[56]++;// Register the existing user
await chai.request(app).post(registerPath).send(existingEmail);}catch(error){cov_28iryjq0wq().s[57]++;throw error;}});// Test case for checking an existing username
cov_28iryjq0wq().s[58]++;it("should indicate that the email exists",async()=>{cov_28iryjq0wq().f[10]++;cov_28iryjq0wq().s[59]++;try{const email=(cov_28iryjq0wq().s[60]++,existingEmail.email);const res=(cov_28iryjq0wq().s[61]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[62]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[63]++;expect(res.body).to.deep.equal({exists:true,message:"Email is already in use. Please use a different email address."});}catch(error){cov_28iryjq0wq().s[64]++;throw error;}});// Test case for checking a non-existing username
cov_28iryjq0wq().s[65]++;it("should indicate that the email is available",async()=>{cov_28iryjq0wq().f[11]++;cov_28iryjq0wq().s[66]++;try{const email=(cov_28iryjq0wq().s[67]++,"nonexistinguser@gmail.com");const res=(cov_28iryjq0wq().s[68]++,await chai.request(app).get(`${existingEmailPath}/${email}`));cov_28iryjq0wq().s[69]++;expect(res).to.have.status(200);cov_28iryjq0wq().s[70]++;expect(res.body).to.deep.equal({exists:false,message:"Email is available."});}catch(error){cov_28iryjq0wq().s[71]++;throw error;}});cov_28iryjq0wq().s[72]++;after(done=>{cov_28iryjq0wq().f[12]++;cov_28iryjq0wq().s[73]++;setTimeout(()=>{cov_28iryjq0wq().f[13]++;cov_28iryjq0wq().s[74]++;console.log("Terminating the test suite.");cov_28iryjq0wq().s[75]++;process.exit();},1000);cov_28iryjq0wq().s[76]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,